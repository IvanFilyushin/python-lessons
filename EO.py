# Рифмы в Евгении Онегине
# 04 октября 2016, 05 октября (ночью, во время бессонницы )
# ...
import re

D = {'Пушкин': ['Александр', 'Сергеевич']}
file_name = r'd:\Python\EO+'
'''
file_name_mod = file_name + '+.txt'
fm = open(file_name_mod,'w')

for S in open(file_name + '.txt'):
    s = re.sub(('\[.*\]'),'',S)
    fm.write(s)
fm.close()
'''
L = []  # список последних слов в строчке
numberS = -1  # счётчик строф; пока строфа не встретилась
for S in open(file_name + '.txt'):
    if not re.match('^$', S):  # непустая строка
        if re.match('([XVIL]+|\* \* \*)', S):  # если начало строфы (* * * - начинаются главы в комментариях
            numberS = 0  # начинаем считать строчки
            L = []  # обнуляем список последних слов
            continue
        if -1 < numberS < 14:  # если считаем и не все строчки сосчитаны
            S = re.sub('[\t\n,.!?:;)—]+', '', S)  # удаляем лишние знаки из строчки
            string = re.split(r'[;,\s]', S)  # выделяем слова
            lastWord = re.sub('(\.\.\. ?|»)$', '', string[-1])  # берём последнее слово в строчке, пытаясь избавиться от ...
            L.append(lastWord)  # добавляем в список полседних слов
            numberS += 1  # строчка сосчитана
        if numberS == 14:  # обработана вся строфа из 14 строчек
            numberS = -1  # готовимся к поиску новой строфы
            T = [(0, 2), (1, 3), (4, 5), (6, 7), (8, 11), (9, 10), (12, 13)]  # номера рифмующихся строк
            for (i, y) in T:  # для последних слов в рифмующихся строчках
                if L[i] in D:  # если слово уже рифмовалось
                    D[L[i]].append(L[y])  # добавляем новую рифму этого слова
                else:
                    D[L[i]] = [L[y]]  # добавляем первую рифму

L_ab = [[w, D[w]] for w in D]  # словарь рифм по алфавиту
L_ab.sort()  # сортирируем

f = open(file_name + '_rhyme.txt', 'w')
for s in L_ab:
    f.write(str(s) + '\n')
f.close()
print('Рифмы собраны для ' + str(len(L_ab)) + ' форм слов')
